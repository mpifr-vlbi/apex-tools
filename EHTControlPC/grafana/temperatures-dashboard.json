{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 18,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "hide": false,
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"cpu\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"usage_idle\")\r\n  |> filter(fn: (r) => r[\"cpu\"] == \"cpu-total\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"cc-apex\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> map(fn: (r) => ({ r with _value: r._value * -1.0 + 100.0 }))\r\n  |> toFloat()\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "title": "Cc-apex CPU%",
      "type": "timeseries"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "System"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "System"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "CPU"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "CPU"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 18,
        "x": 0,
        "y": 5
      },
      "id": 4,
      "interval": "10s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"cc_apex_ipmi_sensor\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"cc-apex\")\r\n  |> filter(fn: (r) => r[\"name\"] == \"system_temp\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")\r\n  ",
          "refId": "System"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "hide": false,
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"cc_apex_ipmi_sensor\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"cc-apex\")\r\n  |> filter(fn: (r) => r[\"name\"] == \"cpu1_temp\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "CPU"
        }
      ],
      "timeFrom": "6h",
      "title": "Cc-apex Temperatures",
      "type": "timeseries"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 80,
            "axisSoftMin": 20,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "Aux"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Aux"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "System"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "System"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 0,
        "y": 11
      },
      "id": 7,
      "interval": "10s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recorder1_sensors\")\r\n  |> filter(fn: (r) => r[\"chip\"] == \"nct6776-isa-0290\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"temp_input\")\r\n  |> filter(fn: (r) => r[\"feature\"] == \"auxtin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "Aux"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "hide": false,
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recorder1_sensors\")\r\n  |> filter(fn: (r) => r[\"chip\"] == \"nct6776-isa-0290\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"temp_input\")\r\n  |> filter(fn: (r) => r[\"feature\"] == \"systin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "System"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "hide": false,
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recorder1_smart_device\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"temp_c\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "Disks"
        }
      ],
      "timeFrom": "6h",
      "title": "Recorder1 Temperatures",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "temp_c[\\s]*{[\\s]*capacity=\"[0-9]*\",[\\s]+device=\"([a-zA-Z]+)\",[\\s]enabled(.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 80,
            "axisSoftMin": 20,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "Aux"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Aux"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "System"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "System"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 9,
        "y": 11
      },
      "id": 9,
      "interval": "10s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recorder2_sensors\")\r\n  |> filter(fn: (r) => r[\"chip\"] == \"nct6776-isa-0290\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"temp_input\")\r\n  |> filter(fn: (r) => r[\"feature\"] == \"auxtin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "Aux"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "hide": false,
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recorder2_sensors\")\r\n  |> filter(fn: (r) => r[\"chip\"] == \"nct6776-isa-0290\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"temp_input\")\r\n  |> filter(fn: (r) => r[\"feature\"] == \"systin\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "System"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "hide": false,
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recorder2_smart_device\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"temp_c\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "A"
        }
      ],
      "timeFrom": "6h",
      "title": "Recorder2 Temperatures",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "temp_c[\\s]*{[\\s]*capacity=\"[0-9]*\",[\\s]+device=\"([a-zA-Z]+)\",[\\s]enabled(.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 80,
            "axisSoftMin": 20,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "CPU"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "CPU"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "System"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "System"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 0,
        "y": 19
      },
      "id": 8,
      "interval": "10s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recorder3_ipmi_sensor\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"Mark6-4034\")\r\n  |> filter(fn: (r) => r[\"name\"] == \"cpu_temp\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "CPU"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "hide": false,
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recorder3_ipmi_sensor\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"Mark6-4034\")\r\n  |> filter(fn: (r) => r[\"name\"] == \"system_temp\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "System"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "hide": false,
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recorder3_smart_device\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"temp_c\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")\r\n",
          "refId": "Disks"
        }
      ],
      "timeFrom": "6h",
      "title": "Recorder3 Temperatures",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "temp_c[\\s]*{[\\s]*capacity=\"[0-9]*\",[\\s]+device=\"([a-zA-Z]+)\",[\\s]enabled(.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "timeseries"
    },
    {
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 80,
            "axisSoftMin": 20,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "CPU"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "CPU"
              }
            ]
          },
          {
            "matcher": {
              "id": "byFrameRefID",
              "options": "System"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "System"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 9,
        "x": 9,
        "y": 19
      },
      "id": 6,
      "interval": "10s",
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "right"
        },
        "tooltip": {
          "mode": "single"
        }
      },
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recorder4_ipmi_sensor\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"Mark6-4009\")\r\n  |> filter(fn: (r) => r[\"name\"] == \"cpu_temp\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "CPU"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "hide": false,
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recorder4_ipmi_sensor\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\r\n  |> filter(fn: (r) => r[\"host\"] == \"Mark6-4009\")\r\n  |> filter(fn: (r) => r[\"name\"] == \"system_temp\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "System"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "SchNJUxIz"
          },
          "hide": false,
          "query": "from(bucket: \"eht\")\r\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\r\n  |> filter(fn: (r) => r[\"_measurement\"] == \"recorder4_smart_device\")\r\n  |> filter(fn: (r) => r[\"_field\"] == \"temp_c\")\r\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\r\n  |> yield(name: \"mean\")",
          "refId": "Disks"
        }
      ],
      "timeFrom": "6h",
      "title": "Recorder4 Temperatures",
      "transformations": [
        {
          "id": "renameByRegex",
          "options": {
            "regex": "temp_c[\\s]*{[\\s]*capacity=\"[0-9]*\",[\\s]+device=\"([a-zA-Z]+)\",[\\s]enabled(.*)",
            "renamePattern": "$1"
          }
        }
      ],
      "type": "timeseries"
    }
  ],
  "refresh": "30s",
  "schemaVersion": 34,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": []
  },
  "time": {
    "from": "now-6h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "utc",
  "title": "VLBI Hardware",
  "uid": "DuRJbUxSk",
  "version": 20,
  "weekStart": "monday"
}

