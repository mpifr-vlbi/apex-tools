#!/usr/bin/nft -f
# vim:set ts=2 sw=2 et:

# IPv4/IPv6 Simple & Safe firewall ruleset.
# More examples in /usr/share/nftables/ and /usr/share/doc/nftables/examples/.

flush ruleset

# whitelist
define vlbi_servers = {
	131.174.31.0/24,  # vlbimon servers
}
define correlator_networks = {
	193.23.254.17,    # Bonn io15
	195.37.231.36,    # Bonn eportal1
	195.37.231.40,    # Bonn eportal2
	89.1.14.226/28,   # Bonn 10G eportal1
	192.52.62.234,    # Haystack etransfer-external
}
define site_networks = {
	10.0.33.0/24, #apex local wifi
	10.0.6.0/24, #apex local
	10.0.3.0/24, #apex local
	10.0.2.0/24, #apex local
}
define trusted_networks = { $vlbi_servers, $correlator_networks, $site_networks }

table inet filter {
	# whitelist
	set ipv4_whitelist {
		type ipv4_addr
		flags interval
		elements = { $trusted_networks }
	}

	# temporary whitelist
	set ipv4_whitelist_temp {
		type ipv4_addr
		flags dynamic,timeout
		size 65536
		timeout 1d
	}

	# temporary blacklist
	set ipv4_blacklist_temp {
		type ipv4_addr
		flags dynamic,timeout
		size 65536
	}

	chain output {
		type filter hook output priority 0; policy accept;
		#oifname eno2 counter
	}


	#chain forward {
	#	type filter hook forward priority 0; policy drop;

	#	oifname eno1 counter accept
	#	iifname eno1 ct state related, established counter accept
	#	counter
	#}

	chain input {
		type filter hook input priority 0; policy drop;

		# allow established/related connections
		ct state {established, related} accept

		# early drop of invalid connections
		ct state invalid counter log drop

		# allow from loopback
		iifname lo accept
		iifname != lo ip daddr 127.0.0.1/8 counter drop

		# allow LAN port
		iifname eno2 accept

		# allow icmp
		ip protocol icmp limit rate 10/second accept
		ip6 nexthdr icmpv6 limit rate 10/second accept
		meta l4proto ipv6-icmp accept

		# ssh
		tcp dport ssh ip saddr @ipv4_whitelist counter accept
		tcp dport ssh ip saddr @ipv4_whitelist_temp counter accept
		tcp dport ssh ct state new meter flood size 128000 { ip saddr timeout 2h limit rate over 3/hour } update @ipv4_blacklist_temp { ip saddr timeout 1d }
		tcp dport ssh ip saddr @ipv4_blacklist_temp counter drop

		tcp dport ssh ct state new counter accept

		udp dport 60000-61000 ip saddr @ipv4_whitelist accept comment "mosh"
		udp dport 60000-61000 ip saddr @ipv4_whitelist_temp counter accept comment "mosh"
		udp dport 14000 ip saddr @ipv4_whitelist accept comment "h-maser"

		meta l4proto {tcp, udp} th dport {2620-2631, 9000-9003} ip saddr @ipv4_whitelist counter accept comment "jive5ab and UDR Rsync evlbi (EHT DR2021)"

		tcp dport {http, https} accept comment "VLBImonitor server"

		tcp dport {3000, 8086} ip saddr @ipv4_whitelist accept comment "TIG stack"

		# pkttype { broadcast,multicast} accept

		# everything else
		counter reject with icmpx type port-unreachable
	}
}

# ipv4 NAT
table ip nat {
        chain prerouting {
                type nat hook prerouting priority 0; policy accept;
        }

        # for all packets to WAN, after routing, replace source address with primary IP of WAN interface
        chain postrouting {
                type nat hook postrouting priority 100; policy accept;
                oifname "eno1" masquerade;
        }

    # in order for NAT to work, also set
    # $ sudo sysctl -w net.ipv4.ip_forward=1
    # $ cat /etc/sysctl.d/ip_forward.conf
    # net.ipv4.ip_forward = 1
}


